}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
names(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
names(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1}
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
df_state$Hospital <- cbind(outcome.data.state[rank, 2])
print(df_state$Hospital)
df_state$State <- cbind(state)
print(df_state$State)
#df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
head(rankall("heart attack", 20), 10)
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
names(df_state) <- c("Hospital","State")
df_state$Hospital <- cbind("foo")
df_state$Hospital <- "foo"
df_state <- rbind(c("foo", "TN")
)
df_state
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
names(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
names(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1}
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
print(df_state$Hospital)
print(df_state$State)
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
head(rankall("heart attack", 20), 10)
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
names(df_state) <- c("Hospital","State")
df_state <- rbind(c("foo", "TN"))
df_state$Hospital
df_state
names(df_state)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
names(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
names(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1}
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
#print(df_state$Hospital)
#print(df_state$State)
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
(rankall("heart failure"))
tail(rankall("heart failure"), 10)
names(df_state) <- c("Hospital", "State")
names(df_state)
df_state
`colnames<-`(df_state)
`colnames<-`(df_state, c("Hospital", "State"))
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1}
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
#print(df_state$Hospital)
#print(df_state$State)
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
df_state$Hospital
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1}
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
print(df_state[,1])
print(df_state[,2])
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure", 1), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1}
print("default")
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
print(df_state[,1])
print(df_state[,2])
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
tail(rankall("heart failure", 1), 10)
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1}
print("default")
print(rank)
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
print(rank)
df_state <- rbind(c(outcome.data.state[rank, 2], state))
print(df_state[,1])
print(df_state[,2])
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
tail(rankall("heart failure"), 10)
tail(rankall("heart failure", 1), 10)
tail(rankall("heart failure", 10), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1
print("default")
print(rank)}
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
print(rank)
df_state <- rbind(c(outcome.data.state[rank, 2], state))
print(df_state[,1])
print(df_state[,2])
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
tail(rankall("heart failure", 10), 10)
tail(rankall("heart failure", 1), 10)
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1
print("default")
print(rank)}
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num
print(rank)}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
print(df_state[,1])
print(df_state[,2])
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1
print("default")
print(rank)}
if (num == "worst"){rank <-               length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num
print("else")
print("rank")}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
print(df_state[,1])
print(df_state[,2])
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1
print("default")
print(rank)}
else if (num == "worst"){rank <-    length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num
print("else")
print("rank")}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
print(df_state[,1])
print(df_state[,2])
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome.data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states = sort(unique(outcome.data$State))
## Check outcome is valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
try(if(!outcome %in% outcomes) stop("invalid outcome"))
# list indexes of relevent columns of outcomes
index.list <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
index <- index.list[outcome]
# transform worded rank to numbered rank if necessary
#if (num == "best"){rank <- 1}
#if (num == "worst"){rank <- length(na.omit(as.numeric(sort(outcome.data[,index]))))}
#else {rank <- num}
## For each state, find the hospital of the given rank
outcome.data[,index] <- as.numeric(outcome.data[,index])
outcome.data <- na.omit(outcome.data, outcome.data[,index])
outcome.data <- outcome.data[order(outcome.data$State,outcome.data[,index],outcome.data$Hospital.Name),]
# Initialize empty data frame
df <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c("Hospital","State")
df_state <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df_state) <- c("Hospital","State")
for (state in states){
outcome.data.state <- outcome.data[outcome.data$State == state,]
if (num == "best"){rank <- 1}
else if (num == "worst"){rank <-    length(na.omit(as.numeric(sort(outcome.data.state[,index]))))}
else {rank <- num}
df_state <- rbind(c(outcome.data.state[rank, 2], state))
df <- rbind(df, df_state)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
df
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
